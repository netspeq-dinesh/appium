import { URL } from 'url';
import type { FlutterDriver } from '../driver';
import { IsolateSocket } from './isolate_socket';
import type { LogEntry } from './log-monitor';
export declare const OBSERVATORY_URL_PATTERN: RegExp;
export declare function connectSocket(this: FlutterDriver, dartObservatoryURL: string, caps: Record<string, any>): Promise<IsolateSocket>;
export declare function executeGetIsolateCommand(this: FlutterDriver, isolateId: string | number): Promise<unknown>;
export declare function executeGetVMCommand(this: FlutterDriver): Promise<{
    isolates: [{
        name: string;
        id: number;
    }];
}>;
export declare function executeElementCommand(this: FlutterDriver, command: string, elementBase64?: string, extraArgs?: {}): Promise<any>;
export declare function extractObservatoryUrl(logEntry: LogEntry): URL | null;
//# sourceMappingURL=observatory.d.ts.map